import { useRouter } from 'next/router';
import { useState } from 'react';
import HomeDesktop from '@/components/home/homeDesktop';
import Head from 'next/head';
import HomeMobile from '@/components/home/homeMobile';
import Media from '@/utils/media';
import ReusableRefs from '@/utils/reusableRefs';
import { appFeatures } from '@/utils/carousel/carouselData';
import DriverRegistration from '@/components/home/diver/driverRegistration';
import AgentRegistration from '@/components/home/agent/agentRegistration';
import BusinessRegistration from '@/components/home/business/BusinessRegistration';
import ClearingAgentRegistration from '@/components/home/clearingAgent/ClearingAgentRegistration';

export default function Home() {
  const router = useRouter();
  const [monolog, setMonolog] = useState(false);
  const [monofood, setMonofood] = useState(false);
  const [monoride, setMonoride] = useState(false);
  const [monohealth, setMonohealth] = useState(false);
  const [realEstate, setRealEstate] = useState(false);
  const [monowallet, setMonowallet] = useState(false);
  const [allAppFeatures, setAllAppFeatures] = useState(appFeatures);
  const [index, setIndex] = useState(0);
  const [modalShow, setModalShow] = useState(false);
  const [modalShowAgent, setModalShowAgent] = useState(false);
  const [modalShowBusiness, setModalShowBusiness] = useState(false);
  const [driverRegistration, setDriverRegistration] = useState(false);
  const [agentRegistration, setAgentRegistration] = useState(false);
  const [businessRegistration, setBusinessRegistration] = useState(false);
  const [clearingAgentRegistration, setClearingAgentRegistration] = useState(false);

  const { desktopNav, mobileNav } = Media();

  const {
    aboutRef,
    servicesRef,
    featuresRef,
    contactRef,
    handleAboutUsClick,
    handleServicesClick,
    handleFeaturesClick,
    handleContactClick,
  } = ReusableRefs();

  const handlePrevious = () => {
    const newIndex = index - 1;
    setIndex(newIndex < 0 ? allAppFeatures.length - 1 : newIndex);
  };

  const handleNext = () => {
    const newIndex = index + 1;
    setIndex(newIndex >= allAppFeatures.length ? 0 : newIndex);
  };

  const handleMonolog = () => {
    setMonolog(true);
    setMonofood(false);
    setMonoride(false);
    setMonohealth(false);
    setRealEstate(false);
    setMonowallet(false);
    router.push('/services');
  };
  const handleMonofood = () => {
    setMonofood(true);
    setMonolog(false);
    setMonoride(false);
    setMonohealth(false);
    setRealEstate(false);
    setMonowallet(false);
  };
  const handleMonoride = () => {
    setMonoride(true);
    setMonofood(false);
    setMonolog(false);
    setMonohealth(false);
    setRealEstate(false);
    setMonowallet(false);
  };
  const handleMonohealth = () => {
    setMonohealth(true);
    setMonoride(false);
    setMonofood(false);
    setMonolog(false);
    setRealEstate(false);
    setMonowallet(false);
  };
  const handleRealEstate = () => {
    setRealEstate(true);
    setMonohealth(false);
    setMonoride(false);
    setMonofood(false);
    setMonolog(false);
    setMonowallet(false);
  };
  const handleMonowallet = () => {
    setMonowallet(true);
    setRealEstate(false);
    setMonohealth(false);
    setMonoride(false);
    setMonofood(false);
    setMonolog(false);
  };

  return (
    <>
      <Head>
        <title>Monodome- Home</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        style={{
          display: 'flex',
          flexDirection: 'column',
          width: '100%',
          margin: 0,
        }}
      >
        {mobileNav && (
          <>
            <HomeMobile
              monolog={monolog}
              setMonolog={setMonolog}
              monofood={monofood}
              setMonofood={setMonofood}
              monoride={monoride}
              setMonoride={setMonoride}
              monohealth={monohealth}
              setMonohealth={setMonohealth}
              realEstate={realEstate}
              setRealEstate={setRealEstate}
              monowallet={monowallet}
              setMonowallet={setMonowallet}
              handleMonolog={handleMonolog}
              handleMonofood={handleMonofood}
              handleMonoride={handleMonoride}
              handleMonohealth={handleMonohealth}
              handleRealEstate={handleRealEstate}
              handleMonowallet={handleMonowallet}
              allAppFeatures={allAppFeatures}
              setAllAppFeatures={setAllAppFeatures}
              index={index}
              setIndex={setIndex}
              handlePrevious={handlePrevious}
              handleNext={handleNext}
              modalShow={modalShow}
              setModalShow={setModalShow}
              modalShowAgent={modalShowAgent}
              setModalShowAgent={setModalShowAgent}
              modalShowBusiness={modalShowBusiness}
              setModalShowBusiness={setModalShowBusiness}
              aboutRef={aboutRef}
              handleAboutUsClick={handleAboutUsClick}
              servicesRef={servicesRef}
              featuresRef={featuresRef}
              contactRef={contactRef}
              handleServicesClick={handleServicesClick}
              handleFeaturesClick={handleFeaturesClick}
              handleContactClick={handleContactClick}
              driverRegistration={driverRegistration}
              setDriverRegistration={setDriverRegistration}
              agentRegistration={agentRegistration}
              setAgentRegistration={setAgentRegistration}
              businessRegistration={businessRegistration}
              setBusinessRegistration={setBusinessRegistration}
              clearingAgentRegistration={clearingAgentRegistration}
              setClearingAgentRegistration={setClearingAgentRegistration}
            />
          </>
        )}
        {desktopNav && (
          <>
            <HomeDesktop
              monolog={monolog}
              setMonolog={setMonolog}
              monofood={monofood}
              setMonofood={setMonofood}
              monoride={monoride}
              setMonoride={setMonoride}
              monohealth={monohealth}
              setMonohealth={setMonohealth}
              realEstate={realEstate}
              setRealEstate={setRealEstate}
              monowallet={monowallet}
              setMonowallet={setMonowallet}
              handleMonolog={handleMonolog}
              handleMonofood={handleMonofood}
              handleMonoride={handleMonoride}
              handleMonohealth={handleMonohealth}
              handleRealEstate={handleRealEstate}
              handleMonowallet={handleMonowallet}
              allAppFeatures={allAppFeatures}
              setAllAppFeatures={setAllAppFeatures}
              index={index}
              setIndex={setIndex}
              handlePrevious={handlePrevious}
              handleNext={handleNext}
              modalShow={modalShow}
              setModalShow={setModalShow}
              modalShowAgent={modalShowAgent}
              setModalShowAgent={setModalShowAgent}
              modalShowBusiness={modalShowBusiness}
              setModalShowBusiness={setModalShowBusiness}
              aboutRef={aboutRef}
              handleAboutUsClick={handleAboutUsClick}
              servicesRef={servicesRef}
              featuresRef={featuresRef}
              contactRef={contactRef}
              handleServicesClick={handleServicesClick}
              handleFeaturesClick={handleFeaturesClick}
              handleContactClick={handleContactClick}
              driverRegistration={driverRegistration}
              setDriverRegistration={setDriverRegistration}
              agentRegistration={agentRegistration}
              setAgentRegistration={setAgentRegistration}
              businessRegistration={businessRegistration}
              setBusinessRegistration={setBusinessRegistration}
              clearingAgentRegistration={clearingAgentRegistration}
              setClearingAgentRegistration={setClearingAgentRegistration}
            />
          </>
        )}
        <DriverRegistration
          driverRegistration={driverRegistration}
          setDriverRegistration={setDriverRegistration}
        />
        <AgentRegistration 
          agentRegistration={agentRegistration}
          setAgentRegistration={setAgentRegistration}
        />
        <BusinessRegistration 
          businessRegistration={businessRegistration}
          setBusinessRegistration={setBusinessRegistration}
        />
        <ClearingAgentRegistration 
          clearingAgentRegistration={clearingAgentRegistration}
          setClearingAgentRegistration={setClearingAgentRegistration}
        />
      </div>
    </>
  );
}
